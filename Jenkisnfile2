

properties([parameters([choice(choices: ['master\nfeature1\nfeature2'], description: '', name: 'branch')])])

node ('master') {
  
    def mvnHome = tool name: 'maven-3.6.0', type: 'maven'
    stage ('SCM checkout') {
        
          git 'https://github.com/srinu94/my-app'
          
    }
    
    stage ('Compile-Package') {
    
          sh "${mvnHome}/bin/mvn clean package"
          echo "branch is ${params.branch}"
          
    }
    
    stage ('Sonar Ananlysis') {
       withSonarQubeEnv ('sonar-6.7.5') {
          sh "${mvnHome}/bin/mvn sonar:sonar"
       }   
    }
    
    stage("Quality Gate"){
          timeout(time: 1, unit: 'HOURS') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                  slackSend baseUrl: 'https://hooks.slack.com/services/', 
                  channel: 'jenkins_pipeline', 
                  color: 'danger', message: 'Sonar Qube analysis failed', 
                  teamDomain: 'developmentjenkins', tokenCredentialId: 'slack'
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
      } 
    stage ('Email Notification') {
    
         mail bcc: '', body: '''Hi Team,

         Job is successful

         Thanks''', cc: '', from: 'test@jenkins.com', replyTo: '', subject: 'Test email from jenkins', to: 'srinidhi.kumar94@outlook.com'


    }
    
    stage (' Slack Notification') {
    
          slackSend baseUrl: 'https://hooks.slack.com/services/', 
          channel: 'jenkins_pipeline', 
          color: 'danger', message: 'this is just a test message', 
          teamDomain: 'developmentjenkins', tokenCredentialId: 'slack'
    }
}
          
